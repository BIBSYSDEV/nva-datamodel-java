plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id "com.github.gmazzo.buildconfig"
    id 'idea'
    id 'nebula.lint'
}

group 'com.github.bibsysdev'

version '0.19.35'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}


test {
    useJUnitPlatform{
        excludeTags "migrationTest"
    }
    failFast = true
    environment "ID_NAMESPACE", "https://www.example.org"
    environment "DATAMODEL_VERSION", "${project.version}"
    finalizedBy(jacocoTestReport)
}

tasks.register('migrationTesting',Test) {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        includeTags ("migrationTest")
        testLogging {
            events 'skipped', 'passed', 'failed'
        }
    }
    environment "DATAMODEL_VERSION", "${project.version}"
}

migrationTesting.enabled = false

jacocoTestReport {
    dependsOn(test)
    reports {
        xml.enabled true
    }
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
    pmdMain {
        excludes = [
                '**/ResourcesBuildConfig.*'
        ]
    }
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
    exclude '**/ResourcesBuildConfig*'
}

buildConfig {
    className("ResourcesBuildConfig")   // forces the class name. Defaults to 'BuildConfig'
    packageName(project.group)  // forces the package. Defaults to '${project.group}'
    useJavaOutput() //forces the output to be Java
    buildConfigField("String", "RESOURCES_MODEL_VERSION", "\"${project.version}\"")
}
