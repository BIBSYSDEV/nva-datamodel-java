schema:
  required:
  - type
  type: object
  properties:
    identifier:
      $ref: '#/components/schemas/SortableIdentifier'
    status:
      type: string
      enum:
      - NEW
      - DRAFT
      - PUBLISHED
      - DRAFT_FOR_DELETION
    resourceOwner:
      $ref: '#/components/schemas/ResourceOwner'
    publisher:
      $ref: '#/components/schemas/Organization'
    createdDate:
      type: string
      format: date-time
    modifiedDate:
      type: string
      format: date-time
    publishedDate:
      type: string
      format: date-time
    indexedDate:
      type: string
      format: date-time
    handle:
      type: string
      format: uri
    doi:
      type: string
      format: uri
    link:
      type: string
      format: uri
    entityDescription:
      $ref: '#/components/schemas/EntityDescription'
    projects:
      type: array
      items:
        $ref: '#/components/schemas/ResearchProject'
    additionalIdentifiers:
      uniqueItems: true
      type: array
      items:
        $ref: '#/components/schemas/AdditionalIdentifier'
    subjects:
      type: array
      items:
        type: string
        format: uri
    associatedArtifacts:
      type: array
      properties:
        publishable:
          type: boolean
        empty:
          type: boolean
      items:
        $ref: '#/components/schemas/AssociatedArtifact'
    modelVersion:
      type: string
    type:
      type: string
  discriminator:
    propertyName: type
referencedSchemas:
  AdditionalIdentifier:
    required:
    - type
    type: object
    properties:
      source:
        type: string
      value:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  AdministrativeAgreement:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
  Agent:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Approval:
    required:
    - type
    type: object
    properties:
      date:
        type: string
        format: date-time
      approvedBy:
        type: string
        enum:
        - REK
        - NARA
        - NMA
        - DIRHEALTH
      approvalStatus:
        type: string
        enum:
        - NOTAPPLIED
        - APPLIED
        - APPROVED
        - DECLINED
        - REJECTION
      applicationCode:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Architecture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/ArchitectureSubtype'
        description:
          type: string
        architectureOutput:
          type: array
          items:
            $ref: '#/components/schemas/ArchitectureOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArchitectureOutput:
    required:
    - type
    type: object
    properties:
      sequence:
        type: integer
        format: int32
      type:
        type: string
    discriminator:
      propertyName: type
  ArchitectureSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - BUILDING
        - PLANNING_PROPOSAL
        - LANDSCAPE_ARCHITECTURE
        - INTERIOR
        - OTHER
      description:
        type: string
        writeOnly: true
  Artistic:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        type:
          type: string
  ArtisticDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/ArtisticDesignSubtype'
        description:
          type: string
        venues:
          type: array
          items:
            $ref: '#/components/schemas/Venue'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - CLOTHING_DESIGN
        - EXHIBITION
        - GRAPHIC_DESIGN
        - ILLUSTRATION
        - INTERACTION_DESIGN
        - INTERIOR_DESIGN
        - LIGHT_DESIGN
        - OTHER
        - PRODUCT_DESIGN
        - SERVICE_DESIGN
        - WEB_DESIGN
      description:
        type: string
        writeOnly: true
  AssociatedArtifact:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  AssociatedArtifactList:
    type: array
    properties:
      publishable:
        type: boolean
      empty:
        type: boolean
    items:
      $ref: '#/components/schemas/AssociatedArtifact'
  AssociatedLink:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        id:
          type: string
          format: uri
        name:
          type: string
        description:
          type: string
        type:
          type: string
  AudioVisualPublication:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        mediaType:
          type: string
          enum:
          - CompactDisc
          - DVD
          - Streaming
          - DigitalFile
          - Vinyl
          - Other
        publisher:
          type: string
        catalogueNumber:
          type: string
        trackList:
          type: array
          items:
            $ref: '#/components/schemas/MusicTrack'
        type:
          type: string
  Award:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
        organizer:
          type: string
        date:
          $ref: '#/components/schemas/Instant'
        ranking:
          type: integer
          format: int32
        otherInformation:
          type: string
        type:
          type: string
  Book:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
        type:
          type: string
  BookAbstracts:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookAnthology:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookMonograph:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contentType:
          type: string
          enum:
          - AcademicMonograph
          - NonFictionMonograph
          - PopularScienceMonograph
          - Textbook
          - Encyclopedia
          - ExhibitionCatalog
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookSeries:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Broadcast:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/UnconfirmedPublisher'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
  Chapter:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        partOf:
          type: string
          format: uri
        type:
          type: string
  ChapterArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contentType:
          type: string
          enum:
          - AcademicChapter
          - NonFictionChapter
          - PopularScienceChapter
          - TextbookChapter
          - EncyclopediaChapter
          - Introduction
          - ExhibitionCatalogChapter
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  ChapterConferenceAbstract:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  ChapterInReport:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  CinematicRelease:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
  Competition:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          $ref: '#/components/schemas/Time'
        type:
          type: string
  Concert:
    type: object
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        time:
          $ref: '#/components/schemas/Time'
        extent:
          type: string
        description:
          type: string
        concertProgramme:
          type: array
          items:
            $ref: '#/components/schemas/MusicalWorkPerformance'
        partOfSeries:
          type: boolean
  ConferenceAbstract:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  ConferenceLecture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ConferencePoster:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  Contributor:
    required:
    - type
    type: object
    properties:
      identity:
        $ref: '#/components/schemas/Identity'
      affiliations:
        type: array
        items:
          $ref: '#/components/schemas/Organization'
      role:
        type: string
        enum:
        - AcademicCoordinator
        - Actor
        - Advisor
        - Architect
        - ArchitecturalPlanner
        - Artist
        - ArtisticDirector
        - Choreographer
        - Composer
        - Conductor
        - Consultant
        - ContactPerson
        - CostumeDesigner
        - Creator
        - Curator
        - CuratorOrganizer
        - Dancer
        - DataCollector
        - DataCurator
        - DataManager
        - Designer
        - Director
        - Distributor
        - Dramatist
        - Dramaturge
        - Editor
        - EditorialBoardMember
        - Funder
        - HostingInstitution
        - Illustrator
        - InteriorArchitect
        - InterviewSubject
        - Journalist
        - LandscapeArchitect
        - Librettist
        - LightDesigner
        - Musician
        - Organizer
        - Other
        - Producer
        - Photographer
        - ProductionDesigner
        - ProgrammeLeader
        - ProgrammeParticipant
        - ProjectLeader
        - ProjectManager
        - ProjectMember
        - RegistrationAgency
        - RegistrationAuthority
        - RelatedPerson
        - Researcher
        - ResearchGroup
        - RightsHolder
        - Scenographer
        - Screenwriter
        - Soloist
        - SoundDesigner
        - Sponsor
        - Supervisor
        - TranslatorAdapter
        - VfxSupervisor
        - VideoEditor
        - WorkPackageLeader
        - Writer
      sequence:
        type: integer
        format: int32
      correspondingAuthor:
        type: boolean
      type:
        type: string
    discriminator:
      propertyName: type
  DataManagementPlan:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        related:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uri
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DataSet:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        userAgreesToTermsAndConditions:
          type: boolean
        geographicalCoverage:
          $ref: '#/components/schemas/GeographicalDescription'
        referencedBy:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uri
        related:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uri
        compliesWith:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uri
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  Degree:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
        type:
          type: string
  DegreeBachelor:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DegreeLicentiate:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DegreeMaster:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DegreePhd:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  EntityDescription:
    required:
    - type
    type: object
    properties:
      mainTitle:
        type: string
      alternativeTitles:
        type: object
        additionalProperties:
          type: string
      language:
        type: string
        format: uri
      date:
        $ref: '#/components/schemas/PublicationDate'
      contributors:
        type: array
        items:
          $ref: '#/components/schemas/Contributor'
      npiSubjectHeading:
        type: string
      tags:
        type: array
        items:
          type: string
      description:
        type: string
      reference:
        $ref: '#/components/schemas/Reference'
      metadataSource:
        type: string
        format: uri
      abstract:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Event:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        label:
          type: string
        place:
          $ref: '#/components/schemas/Place'
        time:
          $ref: '#/components/schemas/Time'
        agent:
          $ref: '#/components/schemas/Agent'
        product:
          type: string
          format: uri
        subEvent:
          $ref: '#/components/schemas/Event'
        type:
          type: string
  Exhibition:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        organizer:
          type: string
        date:
          $ref: '#/components/schemas/Period'
        otherInformation:
          type: string
        type:
          type: string
  FeatureArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  File:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        identifier:
          type: string
          format: uuid
        name:
          type: string
        mimeType:
          type: string
        size:
          type: integer
          format: int64
        license:
          $ref: '#/components/schemas/License'
        administrativeAgreement:
          type: boolean
        publisherAuthority:
          type: boolean
        embargoDate:
          type: string
          format: date-time
        visibleForNonOwner:
          type: boolean
        type:
          type: string
  GeographicalContent:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
  GeographicalDescription:
    required:
    - type
    type: object
    properties:
      description:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Grant:
    required:
    - type
    type: object
    properties:
      source:
        type: string
      id:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Identity:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
      name:
        type: string
      nameType:
        type: string
        enum:
        - Organizational
        - Personal
      orcId:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Instant:
    required:
    - type
    type: object
    properties:
      value:
        type: string
        format: date-time
      type:
        type: string
    discriminator:
      propertyName: type
  Ismn:
    required:
    - type
    type: object
    properties:
      value:
        type: string
      formatted:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Isrc:
    required:
    - type
    type: object
    properties:
      value:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Journal:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  JournalArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        contentType:
          type: string
          enum:
          - AcademicArticle
          - AcademicLiteratureReview
          - CaseReport
          - StudyProtocol
          - ProfessionalArticle
          - PopularScienceArticle
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalCorrigendum:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        corrigendumFor:
          type: string
          format: uri
        type:
          type: string
  JournalInterview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalIssue:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalLeader:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalLetter:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalReview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  Lecture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  LegacyFile:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
  License:
    required:
    - type
    type: object
    properties:
      identifier:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      link:
        type: string
        format: uri
      type:
        type: string
    discriminator:
      propertyName: type
  LiteraryArts:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/LiteraryArtsSubtype'
        manifestations:
          type: array
          items:
            $ref: '#/components/schemas/LiteraryArtsManifestation'
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  LiteraryArtsAudioVisual:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        subtype:
          type: string
          enum:
          - Audiobook
          - RadioPlay
          - ShortFilm
          - Podcast
          - Other
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbn:
          type: string
        extent:
          type: integer
          format: int32
        type:
          type: string
  LiteraryArtsManifestation:
    required:
    - type
    type: object
    properties:
      publicationDate:
        $ref: '#/components/schemas/PublicationDate'
      type:
        type: string
    discriminator:
      propertyName: type
  LiteraryArtsMonograph:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbn:
          type: string
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  LiteraryArtsPerformance:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        subtype:
          type: string
          enum:
          - Reading
          - Play
          - Other
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        type:
          type: string
  LiteraryArtsSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - Novel
        - Poetry
        - Novella
        - ShortFiction
        - Essay
        - Translation
        - Retelling
        - Play
        - Other
      description:
        type: string
        writeOnly: true
  LiteraryArtsWeb:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        id:
          type: string
          format: uri
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
  Map:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  MediaBlogPost:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaContribution:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        medium:
          $ref: '#/components/schemas/MediaSubType'
        format:
          type: string
          enum:
          - Text
          - Sound
          - Video
        disseminationChannel:
          type: string
        partOf:
          $ref: '#/components/schemas/SeriesEpisode'
        type:
          type: string
  MediaContributionPeriodical:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  MediaFeatureArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  MediaInterview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaParticipationInRadioOrTv:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaPodcast:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaReaderOpinion:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  MediaSubType:
    type: object
    properties:
      type:
        type: string
        enum:
        - Journal
        - Radio
        - TV
        - Internet
        - Other
      description:
        type: string
        writeOnly: true
  MentionInPublication:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        title:
          type: string
        issue:
          type: string
        date:
          $ref: '#/components/schemas/Time'
        otherInformation:
          type: string
        type:
          type: string
  MonographPages:
    required:
    - type
    type: object
    properties:
      introduction:
        $ref: '#/components/schemas/Range'
      pages:
        type: string
      illustrated:
        type: boolean
      type:
        type: string
    discriminator:
      propertyName: type
  MovingPicture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/MovingPictureSubtype'
        description:
          type: string
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/MovingPictureOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MovingPictureOutput:
    required:
    - type
    type: object
    properties:
      sequence:
        type: integer
        format: int32
      type:
        type: string
    discriminator:
      propertyName: type
  MovingPictureSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - FILM
        - SHORT
        - SERIAL
        - INTERACTIVE
        - AUGMENTED_VIRTUAL_REALITY
        - OTHER
      description:
        type: string
        writeOnly: true
  MusicPerformance:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        manifestations:
          type: array
          items:
            $ref: '#/components/schemas/MusicPerformanceManifestation'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MusicPerformanceManifestation:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  MusicScore:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        ensemble:
          type: string
        movements:
          type: string
        extent:
          type: string
        publisher:
          $ref: '#/components/schemas/UnconfirmedPublisher'
        ismn:
          $ref: '#/components/schemas/Ismn'
        isrc:
          $ref: '#/components/schemas/Isrc'
        type:
          type: string
  MusicTrack:
    required:
    - type
    type: object
    properties:
      title:
        type: string
      composer:
        type: string
      extent:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  MusicalWork:
    required:
    - type
    type: object
    properties:
      title:
        type: string
      composer:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  MusicalWorkPerformance:
    type: object
    properties:
      title:
        type: string
      composer:
        type: string
      premiere:
        type: boolean
  NullAssociatedArtifact:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        type:
          type: string
  NullPages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Organization:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Agent'
    - type: object
      properties:
        id:
          type: string
          format: uri
        labels:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
  OtherPerformance:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        performanceType:
          type: string
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        extent:
          type: string
        musicalWorks:
          type: array
          items:
            $ref: '#/components/schemas/MusicalWork'
        type:
          type: string
  OtherPresentation:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  OtherRelease:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        description:
          type: string
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        publisher:
          $ref: '#/components/schemas/UnconfirmedPublisher'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
  OtherStudentWork:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  Pages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  PerformingArts:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/PerformingArtsSubtype'
        description:
          type: string
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/PerformingArtsOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  PerformingArtsOutput:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  PerformingArtsSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - THEATRICAL_PRODUCTION
        - BROADCAST
        - OTHER
      description:
        type: string
        writeOnly: true
  PerformingArtsVenue:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PerformingArtsOutput'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/Place'
        date:
          $ref: '#/components/schemas/Time'
        sequence:
          type: integer
          format: int32
        type:
          type: string
  Period:
    required:
    - type
    type: object
    properties:
      from:
        type: string
        format: date-time
      to:
        type: string
        format: date-time
      type:
        type: string
    discriminator:
      propertyName: type
  Place:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Publication:
    required:
    - type
    type: object
    properties:
      identifier:
        $ref: '#/components/schemas/SortableIdentifier'
      status:
        type: string
        enum:
        - NEW
        - DRAFT
        - PUBLISHED
        - DRAFT_FOR_DELETION
      resourceOwner:
        $ref: '#/components/schemas/ResourceOwner'
      publisher:
        $ref: '#/components/schemas/Organization'
      createdDate:
        type: string
        format: date-time
      modifiedDate:
        type: string
        format: date-time
      publishedDate:
        type: string
        format: date-time
      indexedDate:
        type: string
        format: date-time
      handle:
        type: string
        format: uri
      doi:
        type: string
        format: uri
      link:
        type: string
        format: uri
      entityDescription:
        $ref: '#/components/schemas/EntityDescription'
      projects:
        type: array
        items:
          $ref: '#/components/schemas/ResearchProject'
      additionalIdentifiers:
        uniqueItems: true
        type: array
        items:
          $ref: '#/components/schemas/AdditionalIdentifier'
      subjects:
        type: array
        items:
          type: string
          format: uri
      associatedArtifacts:
        type: array
        properties:
          publishable:
            type: boolean
          empty:
            type: boolean
        items:
          $ref: '#/components/schemas/AssociatedArtifact'
      modelVersion:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationContext:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationDate:
    required:
    - type
    type: object
    properties:
      year:
        type: string
      month:
        type: string
      day:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationInstancePages:
    required:
    - type
    type: object
    properties:
      peerReviewed:
        type: boolean
      pages:
        $ref: '#/components/schemas/Pages'
      type:
        type: string
    discriminator:
      propertyName: type
  PublishedFile:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
  Publisher:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  PublishingHouse:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Range:
    required:
    - type
    type: object
    properties:
      begin:
        type: string
      end:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Reference:
    required:
    - type
    type: object
    properties:
      publicationContext:
        $ref: '#/components/schemas/PublicationContext'
      doi:
        type: string
        format: uri
      publicationInstance:
        $ref: '#/components/schemas/PublicationInstancePages'
      type:
        type: string
    discriminator:
      propertyName: type
  Report:
    type: object
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
  ReportBasic:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportBookOfAbstract:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportPolicy:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportResearch:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportWorkingPaper:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ResearchData:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
  ResearchProject:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
      name:
        type: string
      grants:
        type: array
        items:
          $ref: '#/components/schemas/Grant'
      approvals:
        type: array
        items:
          $ref: '#/components/schemas/Approval'
      type:
        type: string
    discriminator:
      propertyName: type
  ResourceOwner:
    type: object
    properties:
      owner:
        type: string
      ownerAffiliation:
        type: string
        format: uri
  Series:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  SeriesEpisode:
    required:
    - type
    type: object
    properties:
      series:
        type: string
      seriesPart:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  SortableIdentifier:
    type: object
  Time:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  UnconfirmedJournal:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        title:
          type: string
        printIssn:
          type: string
        onlineIssn:
          type: string
        type:
          type: string
  UnconfirmedMediaContributionPeriodical:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        title:
          type: string
        printIssn:
          type: string
        onlineIssn:
          type: string
        type:
          type: string
  UnconfirmedOrganization:
    type: object
    allOf:
    - $ref: '#/components/schemas/Agent'
    - type: object
      properties:
        name:
          type: string
  UnconfirmedPlace:
    required:
    - type
    type: object
    properties:
      label:
        type: string
      country:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  UnconfirmedPublisher:
    required:
    - type
    type: object
    properties:
      name:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  UnconfirmedSeries:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        title:
          type: string
        issn:
          type: string
        onlineIssn:
          type: string
        type:
          type: string
  UnpublishedFile:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
  Venue:
    required:
    - type
    type: object
    properties:
      place:
        $ref: '#/components/schemas/Place'
      date:
        $ref: '#/components/schemas/Time'
      sequence:
        type: integer
        format: int32
      type:
        type: string
    discriminator:
      propertyName: type
  VisualArts:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/VisualArtsSubtype'
        description:
          type: string
        venues:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Venue'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  VisualArtsSubtype:
    type: object
    properties:
      type:
        type: string
        enum:
        - IndividualExhibition
        - CollectiveExhibition
        - Installation
        - ArtInPublicSpace
        - Performance
        - VisualArts
        - AudioArt
        - ArtistBook
        - Other
      description:
        type: string
        writeOnly: true
