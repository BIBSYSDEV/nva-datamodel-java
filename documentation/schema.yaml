schema:
  required:
  - type
  type: object
  properties:
    identifier:
      $ref: '#/components/schemas/SortableIdentifier'
    status:
      type: string
      example: null
      enum:
      - NEW
      - DRAFT
      - PUBLISHED_METADATA
      - PUBLISHED
      - DELETED
      - DRAFT_FOR_DELETION
    resourceOwner:
      $ref: '#/components/schemas/ResourceOwner'
    publisher:
      $ref: '#/components/schemas/Organization'
    createdDate:
      type: string
      format: date-time
      example: null
    modifiedDate:
      type: string
      format: date-time
      example: null
    publishedDate:
      type: string
      format: date-time
      example: null
    indexedDate:
      type: string
      format: date-time
      example: null
    handles:
      uniqueItems: true
      type: array
      example: null
      items:
        type: string
        format: uri
        example: null
    doi:
      type: string
      format: uri
      example: null
    link:
      type: string
      format: uri
      example: null
    entityDescription:
      $ref: '#/components/schemas/EntityDescription'
    projects:
      type: array
      example: null
      items:
        $ref: '#/components/schemas/ResearchProject'
    fundings:
      type: array
      example: null
      items:
        $ref: '#/components/schemas/Funding'
    additionalIdentifiers:
      uniqueItems: true
      type: array
      example: null
      items:
        $ref: '#/components/schemas/AdditionalIdentifier'
    subjects:
      type: array
      example: null
      items:
        type: string
        format: uri
        example: null
    associatedArtifacts:
      type: array
      properties:
        empty:
          type: boolean
          example: null
        publishable:
          type: boolean
          example: null
      example: null
      items:
        $ref: '#/components/schemas/AssociatedArtifact'
    rightsHolder:
      type: string
      example: null
    modelVersion:
      type: string
      example: null
    type:
      type: string
      example: null
  example: null
  discriminator:
    propertyName: type
referencedSchemas:
  AcademicArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  AcademicChapter:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  AcademicLiteratureReview:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  AcademicMonograph:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  AdditionalIdentifier:
    required:
    - type
    type: object
    properties:
      sourceName:
        type: string
        example: null
      value:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  AdministrativeAgreement:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  Agent:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Anthology:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  Approval:
    required:
    - type
    type: object
    properties:
      approvalDate:
        type: string
        format: date-time
        example: null
      approvedBy:
        type: string
        example: null
        enum:
        - REK
        - NARA
        - NMA
        - DIRHEALTH
      approvalStatus:
        type: string
        example: null
        enum:
        - NOTAPPLIED
        - APPLIED
        - APPROVED
        - DECLINED
        - REJECTION
      applicationCode:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Architecture:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/ArchitectureSubtype'
        description:
          type: string
          example: null
        architectureOutput:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/ArchitectureOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  ArchitectureOutput:
    required:
    - type
    type: object
    properties:
      sequence:
        type: integer
        format: int32
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  ArchitectureSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - BUILDING
        - PLANNING_PROPOSAL
        - LANDSCAPE_ARCHITECTURE
        - INTERIOR
        - OTHER
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  Artistic:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  ArtisticDesign:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/ArtisticDesignSubtype'
        description:
          type: string
          example: null
        venues:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Venue'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  ArtisticDesignSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - CLOTHING_DESIGN
        - EXHIBITION
        - GRAPHIC_DESIGN
        - ILLUSTRATION
        - INTERACTION_DESIGN
        - INTERIOR_DESIGN
        - LIGHT_DESIGN
        - OTHER
        - PRODUCT_DESIGN
        - SERVICE_DESIGN
        - WEB_DESIGN
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  AssociatedArtifact:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  AssociatedArtifactList:
    type: array
    properties:
      empty:
        type: boolean
        example: null
      publishable:
        type: boolean
        example: null
    example: null
    items:
      $ref: '#/components/schemas/AssociatedArtifact'
  AssociatedLink:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        name:
          type: string
          example: null
        description:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  AudioVisualPublication:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        mediaType:
          $ref: '#/components/schemas/MusicMediaSubtype'
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        catalogueNumber:
          type: string
          example: null
        trackList:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/MusicTrack'
        isrc:
          $ref: '#/components/schemas/Isrc'
        type:
          type: string
          example: null
      example: null
  Award:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
          example: null
        organizer:
          type: string
          example: null
        date:
          $ref: '#/components/schemas/Instant'
        ranking:
          type: integer
          format: int32
          example: null
        otherInformation:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  Book:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
          example: null
        seriesNumber:
          type: string
          example: null
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          example: null
          items:
            type: string
            example: null
        type:
          type: string
          example: null
      example: null
  BookAbstracts:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  BookAnthology:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  BookMonograph:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        contentType:
          type: string
          writeOnly: true
          example: null
          enum:
          - AcademicMonograph
          - NonFictionMonograph
          - PopularScienceMonograph
          - Textbook
          - Encyclopedia
          - ExhibitionCatalog
        type:
          type: string
          example: null
      example: null
  BookSeries:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Broadcast:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
          example: null
      example: null
  CaseReport:
    required:
    - Type
    type: object
    example: null
    discriminator:
      propertyName: Type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        Type:
          type: string
          example: null
      example: null
  ChapterArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        contentType:
          type: string
          writeOnly: true
          example: null
          enum:
          - AcademicChapter
          - NonFictionChapter
          - PopularScienceChapter
          - TextbookChapter
          - EncyclopediaChapter
          - Introduction
          - ExhibitionCatalogChapter
        type:
          type: string
          example: null
      example: null
  ChapterConferenceAbstract:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  ChapterInReport:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  CinematicRelease:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
          example: null
      example: null
  Competition:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
          example: null
        description:
          type: string
          example: null
        date:
          $ref: '#/components/schemas/Time'
        type:
          type: string
          example: null
      example: null
  Concert:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        time:
          $ref: '#/components/schemas/Time'
        extent:
          type: string
          example: null
        concertProgramme:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/MusicalWorkPerformance'
        concertSeries:
          type: string
          example: null
      example: null
  ConferenceAbstract:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  ConferenceLecture:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  ConferencePoster:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  ConferenceReport:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ConfirmedFunding:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Funding'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  Contributor:
    required:
    - type
    type: object
    properties:
      identity:
        $ref: '#/components/schemas/Identity'
      affiliations:
        type: array
        example: null
        items:
          $ref: '#/components/schemas/Organization'
      role:
        $ref: '#/components/schemas/RoleType'
      sequence:
        type: integer
        format: int32
        example: null
      correspondingAuthor:
        type: boolean
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  DataManagementPlan:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        related:
          uniqueItems: true
          type: array
          example: null
          items:
            type: string
            format: uri
            example: null
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  DataSet:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        userAgreesToTermsAndConditions:
          type: boolean
          example: null
        geographicalCoverage:
          $ref: '#/components/schemas/GeographicalDescription'
        referencedBy:
          uniqueItems: true
          type: array
          example: null
          items:
            type: string
            format: uri
            example: null
        related:
          uniqueItems: true
          type: array
          example: null
          items:
            type: string
            format: uri
            example: null
        compliesWith:
          uniqueItems: true
          type: array
          example: null
          items:
            type: string
            format: uri
            example: null
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  Degree:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
          example: null
        seriesNumber:
          type: string
          example: null
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          example: null
          items:
            type: string
            example: null
        type:
          type: string
          example: null
      example: null
  DegreeBachelor:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        type:
          type: string
          example: null
      example: null
  DegreeLicentiate:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        type:
          type: string
          example: null
      example: null
  DegreeMaster:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        type:
          type: string
          example: null
      example: null
  DegreePhd:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        type:
          type: string
          example: null
      example: null
  Encyclopedia:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  EncyclopediaChapter:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
      example: null
  EntityDescription:
    required:
    - type
    type: object
    properties:
      mainTitle:
        type: string
        example: null
      alternativeTitles:
        type: object
        additionalProperties:
          type: string
          example: null
        example: null
      language:
        type: string
        format: uri
        example: null
      publicationDate:
        $ref: '#/components/schemas/PublicationDate'
      contributors:
        type: array
        example: null
        items:
          $ref: '#/components/schemas/Contributor'
      alternativeAbstracts:
        type: object
        additionalProperties:
          type: string
          example: null
        example: null
      npiSubjectHeading:
        type: string
        example: null
      tags:
        type: array
        example: null
        items:
          type: string
          example: null
      description:
        type: string
        example: null
      reference:
        $ref: '#/components/schemas/Reference'
      metadataSource:
        type: string
        format: uri
        example: null
      abstract:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Event:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        label:
          type: string
          example: null
        place:
          $ref: '#/components/schemas/Place'
        time:
          $ref: '#/components/schemas/Time'
        agent:
          $ref: '#/components/schemas/Agent'
        product:
          type: string
          format: uri
          example: null
        subEvent:
          $ref: '#/components/schemas/Event'
        type:
          type: string
          example: null
      example: null
  Exhibition:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        name:
          type: string
          example: null
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        organizer:
          type: string
          example: null
        date:
          $ref: '#/components/schemas/Period'
        otherInformation:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  ExhibitionBasic:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/ExhibitionProductionManifestation'
    - type: object
      properties:
        organization:
          $ref: '#/components/schemas/UnconfirmedOrganization'
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        date:
          $ref: '#/components/schemas/Period'
      example: null
  ExhibitionCatalog:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ExhibitionCatalogChapter:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  ExhibitionCatalogReference:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ExhibitionProductionManifestation'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  ExhibitionContent:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  ExhibitionMentionInPublication:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/ExhibitionProductionManifestation'
    - type: object
      properties:
        title:
          type: string
          example: null
        issue:
          type: string
          example: null
        pages:
          type: string
          example: null
        date:
          $ref: '#/components/schemas/Time'
        otherInformation:
          type: string
          example: null
      example: null
  ExhibitionOtherPresentation:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ExhibitionProductionManifestation'
    - type: object
      properties:
        typeDescription:
          type: string
          example: null
        description:
          type: string
          example: null
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
          example: null
      example: null
  ExhibitionProduction:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/ExhibitionProductionSubtype'
        manifestations:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/ExhibitionProductionManifestation'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  ExhibitionProductionManifestation:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  ExhibitionProductionSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - BasicExhibition
        - TemporaryExhibition
        - PopupExhibition
        - AmbulatingExhibition
        - DigitalExhibition
        - HistoricalInterior
        - ExhibitionProductionOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  FeatureArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  File:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        identifier:
          type: string
          format: uuid
          example: null
        name:
          type: string
          example: null
        mimeType:
          type: string
          example: null
        size:
          type: integer
          format: int64
          example: null
        license:
          type: string
          format: uri
          example: null
        administrativeAgreement:
          type: boolean
          example: null
        publisherAuthority:
          type: boolean
          example: null
        embargoDate:
          type: string
          format: date-time
          example: null
        visibleForNonOwner:
          type: boolean
          example: null
        type:
          type: string
          example: null
      example: null
  Funding:
    required:
    - type
    type: object
    properties:
      identifier:
        type: string
        example: null
      source:
        type: string
        format: uri
        example: null
      labels:
        type: object
        additionalProperties:
          type: string
          example: null
        example: null
      activeFrom:
        type: string
        format: date-time
        example: null
      activeTo:
        type: string
        format: date-time
        example: null
      fundingAmount:
        $ref: '#/components/schemas/MonetaryAmount'
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  GeographicalContent:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
          example: null
      example: null
  GeographicalDescription:
    required:
    - type
    type: object
    properties:
      description:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Identity:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
        example: null
      name:
        type: string
        example: null
      nameType:
        type: string
        example: null
        enum:
        - Organizational
        - Personal
      orcId:
        type: string
        example: null
      verificationStatus:
        type: string
        example: null
        enum:
        - Verified
        - CannotBeEstablished
        - NotVerified
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Instant:
    required:
    - type
    type: object
    properties:
      value:
        type: string
        format: date-time
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Introduction:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  Ismn:
    required:
    - type
    type: object
    properties:
      value:
        type: string
        example: null
      formatted:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Isrc:
    required:
    - type
    type: object
    properties:
      value:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Journal:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  JournalArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        contentType:
          type: string
          writeOnly: true
          example: null
          enum:
          - AcademicArticle
          - AcademicLiteratureReview
          - CaseReport
          - StudyProtocol
          - ProfessionalArticle
          - PopularScienceArticle
        type:
          type: string
          example: null
      example: null
  JournalCorrigendum:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        corrigendumFor:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  JournalInterview:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  JournalIssue:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  JournalLeader:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  JournalLetter:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  JournalReview:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  Lecture:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  LiteraryArts:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/LiteraryArtsSubtype'
        manifestations:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/LiteraryArtsManifestation'
        description:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  LiteraryArtsAudioVisual:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/LiteraryArtsAudioVisualSubtype'
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          example: null
          items:
            type: string
            example: null
        extent:
          type: integer
          format: int32
          example: null
        type:
          type: string
          example: null
      example: null
  LiteraryArtsAudioVisualSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - Audiobook
        - RadioPlay
        - ShortFilm
        - Podcast
        - LiteraryArtsAudioVisualOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  LiteraryArtsManifestation:
    required:
    - type
    type: object
    properties:
      publicationDate:
        $ref: '#/components/schemas/PublicationDate'
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  LiteraryArtsMonograph:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          example: null
          items:
            type: string
            example: null
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  LiteraryArtsPerformance:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/LiteraryArtsPerformanceSubtype'
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        type:
          type: string
          example: null
      example: null
  LiteraryArtsPerformanceSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - Reading
        - Play
        - LiteraryArtsPerformanceOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  LiteraryArtsSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - Novel
        - Poetry
        - Novella
        - ShortFiction
        - Essay
        - Translation
        - Retelling
        - Play
        - LiteraryArtsOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  LiteraryArtsWeb:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/LiteraryArtsManifestation'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
          example: null
      example: null
  Map:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  MediaBlogPost:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MediaContribution:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        medium:
          $ref: '#/components/schemas/MediaSubType'
        format:
          type: string
          example: null
          enum:
          - Text
          - Sound
          - Video
        disseminationChannel:
          type: string
          example: null
        partOf:
          $ref: '#/components/schemas/SeriesEpisode'
        type:
          type: string
          example: null
      example: null
  MediaContributionPeriodical:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  MediaFeatureArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  MediaInterview:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MediaParticipationInRadioOrTv:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MediaPodcast:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MediaReaderOpinion:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  MediaSubType:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - Journal
        - Radio
        - TV
        - Internet
        - MediaTypeOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  MentionInPublication:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/ArchitectureOutput'
    - type: object
      properties:
        title:
          type: string
          example: null
        issue:
          type: string
          example: null
        date:
          $ref: '#/components/schemas/Time'
        otherInformation:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  MonetaryAmount:
    type: object
    properties:
      currency:
        type: string
        example: null
        enum:
        - NOK
        - EUR
        - USD
        - GBP
      amount:
        type: integer
        format: int64
        example: null
    example: null
  MonographPages:
    required:
    - type
    type: object
    properties:
      introduction:
        $ref: '#/components/schemas/Range'
      pages:
        type: string
        example: null
      illustrated:
        type: boolean
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  MovingPicture:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/MovingPictureSubtype'
        description:
          type: string
          example: null
        outputs:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/MovingPictureOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MovingPictureOutput:
    required:
    - type
    type: object
    properties:
      sequence:
        type: integer
        format: int32
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  MovingPictureSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - FILM
        - SHORT
        - SERIAL
        - INTERACTIVE
        - AUGMENTED_VIRTUAL_REALITY
        - OTHER
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  MusicMediaSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - CompactDisc
        - DVD
        - Streaming
        - DigitalFile
        - Vinyl
        - MusicMediaOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  MusicPerformance:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        manifestations:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/MusicPerformanceManifestation'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  MusicPerformanceManifestation:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  MusicScore:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        ensemble:
          type: string
          example: null
        movements:
          type: string
          example: null
        extent:
          type: string
          example: null
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        ismn:
          $ref: '#/components/schemas/Ismn'
        type:
          type: string
          example: null
      example: null
  MusicTrack:
    required:
    - type
    type: object
    properties:
      title:
        type: string
        example: null
      composer:
        type: string
        example: null
      extent:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  MusicalWork:
    required:
    - type
    type: object
    properties:
      title:
        type: string
        example: null
      composer:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  MusicalWorkPerformance:
    type: object
    properties:
      title:
        type: string
        example: null
      composer:
        type: string
        example: null
      premiere:
        type: boolean
        example: null
    example: null
  NonFictionChapter:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  NonFictionMonograph:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  NullAssociatedArtifact:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/AssociatedArtifact'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  NullPages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  NullPublisher:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  Organization:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Agent'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        labels:
          type: object
          additionalProperties:
            type: string
            example: null
          example: null
        type:
          type: string
          example: null
      example: null
  OtherPerformance:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MusicPerformanceManifestation'
    - type: object
      properties:
        performanceType:
          type: string
          example: null
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        extent:
          type: string
          example: null
        musicalWorks:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/MusicalWork'
        type:
          type: string
          example: null
      example: null
  OtherPresentation:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  OtherRelease:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/MovingPictureOutput'
    - type: object
      properties:
        description:
          type: string
          example: null
        place:
          $ref: '#/components/schemas/UnconfirmedPlace'
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        date:
          $ref: '#/components/schemas/Instant'
        type:
          type: string
          example: null
      example: null
  OtherStudentWork:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        type:
          type: string
          example: null
      example: null
  Pages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PerformingArts:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/PerformingArtsSubtype'
        description:
          type: string
          example: null
        outputs:
          type: array
          example: null
          items:
            $ref: '#/components/schemas/PerformingArtsOutput'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  PerformingArtsOutput:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PerformingArtsSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - THEATRICAL_PRODUCTION
        - BROADCAST
        - OTHER
      description:
        type: string
        writeOnly: true
        example: null
    example: null
  PerformingArtsVenue:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PerformingArtsOutput'
    - type: object
      properties:
        place:
          $ref: '#/components/schemas/Place'
        date:
          $ref: '#/components/schemas/Time'
        sequence:
          type: integer
          format: int32
          example: null
        type:
          type: string
          example: null
      example: null
  Period:
    required:
    - type
    type: object
    properties:
      from:
        type: string
        format: date-time
        example: null
      to:
        type: string
        format: date-time
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Place:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PopularScienceArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  PopularScienceChapter:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
          example: null
      example: null
  PopularScienceMonograph:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ProfessionalArticle:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  Publication:
    required:
    - type
    type: object
    properties:
      identifier:
        $ref: '#/components/schemas/SortableIdentifier'
      status:
        type: string
        example: null
        enum:
        - NEW
        - DRAFT
        - PUBLISHED_METADATA
        - PUBLISHED
        - DELETED
        - DRAFT_FOR_DELETION
      resourceOwner:
        $ref: '#/components/schemas/ResourceOwner'
      publisher:
        $ref: '#/components/schemas/Organization'
      createdDate:
        type: string
        format: date-time
        example: null
      modifiedDate:
        type: string
        format: date-time
        example: null
      publishedDate:
        type: string
        format: date-time
        example: null
      indexedDate:
        type: string
        format: date-time
        example: null
      handles:
        uniqueItems: true
        type: array
        example: null
        items:
          type: string
          format: uri
          example: null
      doi:
        type: string
        format: uri
        example: null
      link:
        type: string
        format: uri
        example: null
      entityDescription:
        $ref: '#/components/schemas/EntityDescription'
      projects:
        type: array
        example: null
        items:
          $ref: '#/components/schemas/ResearchProject'
      fundings:
        type: array
        example: null
        items:
          $ref: '#/components/schemas/Funding'
      additionalIdentifiers:
        uniqueItems: true
        type: array
        example: null
        items:
          $ref: '#/components/schemas/AdditionalIdentifier'
      subjects:
        type: array
        example: null
        items:
          type: string
          format: uri
          example: null
      associatedArtifacts:
        type: array
        properties:
          empty:
            type: boolean
            example: null
          publishable:
            type: boolean
            example: null
        example: null
        items:
          $ref: '#/components/schemas/AssociatedArtifact'
      rightsHolder:
        type: string
        example: null
      modelVersion:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PublicationContext:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PublicationDate:
    required:
    - type
    type: object
    properties:
      year:
        type: string
        example: null
      month:
        type: string
        example: null
      day:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PublicationInstancePages:
    required:
    - type
    type: object
    properties:
      pages:
        $ref: '#/components/schemas/Pages'
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  PublishedFile:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        publishedDate:
          type: string
          format: date-time
          example: null
        type:
          type: string
          example: null
      example: null
  Publisher:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  PublishingHouse:
    required:
    - type
    type: object
    properties:
      valid:
        type: boolean
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Range:
    required:
    - type
    type: object
    properties:
      begin:
        type: string
        example: null
      end:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Reference:
    required:
    - type
    type: object
    properties:
      publicationContext:
        $ref: '#/components/schemas/PublicationContext'
      doi:
        type: string
        format: uri
        example: null
      publicationInstance:
        $ref: '#/components/schemas/PublicationInstancePages'
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  Report:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
          example: null
        seriesNumber:
          type: string
          example: null
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          example: null
          items:
            type: string
            example: null
      example: null
  ReportBasic:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ReportBookOfAbstract:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ReportPolicy:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ReportResearch:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ReportWorkingPaper:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  ResearchData:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        type:
          type: string
          example: null
      example: null
  ResearchProject:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
        example: null
      name:
        type: string
        example: null
      approvals:
        type: array
        example: null
        items:
          $ref: '#/components/schemas/Approval'
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  ResourceOwner:
    type: object
    properties:
      owner:
        type: string
        example: null
      ownerAffiliation:
        type: string
        format: uri
        example: null
    example: null
  RoleType:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - AcademicCoordinator
        - Actor
        - Advisor
        - Architect
        - ArchitecturalPlanner
        - Artist
        - ArtisticDirector
        - Choreographer
        - Composer
        - Conductor
        - Consultant
        - ContactPerson
        - CostumeDesigner
        - Creator
        - Curator
        - CuratorOrganizer
        - Dancer
        - DataCollector
        - DataCurator
        - DataManager
        - Designer
        - Director
        - Distributor
        - Dramatist
        - Dramaturge
        - Editor
        - EditorialBoardMember
        - Funder
        - HostingInstitution
        - Illustrator
        - InteriorArchitect
        - InterviewSubject
        - Journalist
        - LandscapeArchitect
        - Librettist
        - LightDesigner
        - Musician
        - Organizer
        - RoleOther
        - Producer
        - Photographer
        - ProductionDesigner
        - ProgrammeLeader
        - ProgrammeParticipant
        - ProjectLeader
        - ProjectManager
        - ProjectMember
        - RegistrationAgency
        - RegistrationAuthority
        - RelatedPerson
        - Researcher
        - ResearchGroup
        - RightsHolder
        - Scenographer
        - Screenwriter
        - Soloist
        - SoundDesigner
        - Sponsor
        - Supervisor
        - TranslatorAdapter
        - VfxSupervisor
        - VideoEditor
        - WorkPackageLeader
        - Writer
    example: null
  Series:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        id:
          type: string
          format: uri
          example: null
        type:
          type: string
          example: null
      example: null
  SeriesEpisode:
    required:
    - type
    type: object
    properties:
      seriesName:
        type: string
        example: null
      seriesPart:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  SortableIdentifier:
    type: object
    example: null
  StudyProtocol:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
        volume:
          type: string
          example: null
        issue:
          type: string
          example: null
        articleNumber:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  Textbook:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
          example: null
      example: null
  TextbookChapter:
    type: object
    example: null
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/Range'
      example: null
  Time:
    required:
    - type
    type: object
    properties:
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  UnconfirmedFunding:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Funding'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  UnconfirmedJournal:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        title:
          type: string
          example: null
        printIssn:
          type: string
          example: null
        onlineIssn:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  UnconfirmedMediaContributionPeriodical:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        title:
          type: string
          example: null
        printIssn:
          type: string
          example: null
        onlineIssn:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  UnconfirmedOrganization:
    type: object
    properties:
      name:
        type: string
        example: null
    example: null
  UnconfirmedPlace:
    required:
    - type
    type: object
    properties:
      label:
        type: string
        example: null
      country:
        type: string
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  UnconfirmedPublisher:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        name:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  UnconfirmedSeries:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        title:
          type: string
          example: null
        issn:
          type: string
          example: null
        onlineIssn:
          type: string
          example: null
        type:
          type: string
          example: null
      example: null
  UnpublishedFile:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/File'
    - type: object
      properties:
        type:
          type: string
          example: null
      example: null
  Venue:
    required:
    - type
    type: object
    properties:
      place:
        $ref: '#/components/schemas/Place'
      date:
        $ref: '#/components/schemas/Time'
      sequence:
        type: integer
        format: int32
        example: null
      type:
        type: string
        example: null
    example: null
    discriminator:
      propertyName: type
  VisualArts:
    required:
    - type
    type: object
    example: null
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        subtype:
          $ref: '#/components/schemas/VisualArtsSubtype'
        description:
          type: string
          example: null
        venues:
          uniqueItems: true
          type: array
          example: null
          items:
            $ref: '#/components/schemas/Venue'
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
          example: null
      example: null
  VisualArtsSubtype:
    type: object
    properties:
      type:
        type: string
        example: null
        enum:
        - IndividualExhibition
        - CollectiveExhibition
        - Installation
        - ArtInPublicSpace
        - Performance
        - VisualArts
        - AudioArt
        - ArtistBook
        - VisualArtsOther
      description:
        type: string
        writeOnly: true
        example: null
    example: null
