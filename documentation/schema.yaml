schema:
  required:
  - type
  type: object
  properties:
    identifier:
      $ref: '#/components/schemas/SortableIdentifier'
    status:
      type: string
      enum:
      - NEW
      - DRAFT
      - PUBLISHED
      - DRAFT_FOR_DELETION
    owner:
      type: string
    publisher:
      $ref: '#/components/schemas/Organization'
    createdDate:
      type: string
      format: date-time
    modifiedDate:
      type: string
      format: date-time
    publishedDate:
      type: string
      format: date-time
    indexedDate:
      type: string
      format: date-time
    handle:
      type: string
      format: uri
    doi:
      type: string
      format: uri
    doiRequest:
      $ref: '#/components/schemas/DoiRequest'
    link:
      type: string
      format: uri
    entityDescription:
      $ref: '#/components/schemas/EntityDescription'
    fileSet:
      $ref: '#/components/schemas/FileSet'
    projects:
      type: array
      items:
        $ref: '#/components/schemas/ResearchProject'
    additionalIdentifiers:
      uniqueItems: true
      type: array
      items:
        $ref: '#/components/schemas/AdditionalIdentifier'
    subjects:
      type: array
      items:
        type: string
        format: uri
    modelVersion:
      type: string
    type:
      type: string
  discriminator:
    propertyName: type
referencedSchemas:
  AdditionalIdentifier:
    required:
    - type
    type: object
    properties:
      source:
        type: string
      value:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Agent:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Approval:
    required:
    - type
    type: object
    properties:
      date:
        type: string
        format: date-time
      approvedBy:
        type: string
        enum:
        - REK
        - NARA
        - NMA
        - DIRHEALTH
      approvalStatus:
        type: string
        enum:
        - NOTAPPLIED
        - APPLIED
        - APPROVED
        - DECLINED
        - REJECTION
      applicationCode:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  ArtisticDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        venues:
          type: array
          items:
            $ref: '#/components/schemas/Venue'
        type:
          type: string
  ArtisticDesignClothingDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignExhibition:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignGraphicDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignIllustration:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignInteractionDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignInteriorDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignLightDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignOther:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        typeDescription:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignProductDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignServiceDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ArtisticDesignWebDesign:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        description:
          type: string
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  Book:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
        type:
          type: string
  BookAbstracts:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookAnthology:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookMonograph:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contentType:
          type: string
          enum:
          - Academic Monograph
          - Non-fiction Monograph
          - Popular Science Monograph
          - Textbook
          - Encyclopedia
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  BookSeries:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Chapter:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        partOf:
          type: string
          format: uri
        type:
          type: string
  ChapterArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contentType:
          type: string
          enum:
          - Academic Chapter
          - Non-fiction Chapter
          - Popular Science Chapter
          - Textbook Chapter
          - Encyclopedia Chapter
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  ConferenceLecture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  ConferencePoster:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  Contributor:
    required:
    - type
    type: object
    properties:
      identity:
        $ref: '#/components/schemas/Identity'
      affiliations:
        type: array
        items:
          $ref: '#/components/schemas/Organization'
      role:
        type: string
        enum:
        - AcademicCoordinator
        - Advisor
        - ContactPerson
        - Creator
        - DataCollector
        - DataCurator
        - DataManager
        - Distributor
        - Editor
        - EditorialBoardMember
        - Funder
        - HostingInstitution
        - Illustrator
        - InterviewSubject
        - Journalist
        - Other
        - Producer
        - ProgrammeLeader
        - ProgrammeParticipant
        - ProjectLeader
        - ProjectManager
        - ProjectMember
        - RegistrationAgency
        - RegistrationAuthority
        - RelatedPerson
        - Researcher
        - ResearchGroup
        - RightsHolder
        - Sponsor
        - Supervisor
        - WorkPackageLeader
      sequence:
        type: integer
        format: int32
      correspondingAuthor:
        type: boolean
      type:
        type: string
    discriminator:
      propertyName: type
  Degree:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
        type:
          type: string
  DegreeBachelor:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DegreeMaster:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DegreePhd:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  DoiRequest:
    required:
    - type
    type: object
    properties:
      status:
        type: string
        enum:
        - REQUESTED
        - APPROVED
        - REJECTED
      modifiedDate:
        type: string
        format: date-time
      createdDate:
        type: string
        format: date-time
      messages:
        type: array
        items:
          $ref: '#/components/schemas/DoiRequestMessage'
      type:
        type: string
    discriminator:
      propertyName: type
  DoiRequestMessage:
    required:
    - type
    type: object
    properties:
      text:
        type: string
      author:
        type: string
      timestamp:
        type: string
        format: date-time
      type:
        type: string
    discriminator:
      propertyName: type
  EntityDescription:
    required:
    - type
    type: object
    properties:
      mainTitle:
        type: string
      alternativeTitles:
        type: object
        additionalProperties:
          type: string
      language:
        type: string
        format: uri
      date:
        $ref: '#/components/schemas/PublicationDate'
      contributors:
        type: array
        items:
          $ref: '#/components/schemas/Contributor'
      npiSubjectHeading:
        type: string
      tags:
        type: array
        items:
          type: string
      description:
        type: string
      reference:
        $ref: '#/components/schemas/Reference'
      metadataSource:
        type: string
        format: uri
      abstract:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Event:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        label:
          type: string
        place:
          $ref: '#/components/schemas/Place'
        time:
          $ref: '#/components/schemas/TemporalExtent'
        agent:
          $ref: '#/components/schemas/Agent'
        product:
          $ref: '#/components/schemas/Publication'
        subEvent:
          $ref: '#/components/schemas/Event'
        type:
          type: string
  FeatureArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  File:
    required:
    - type
    type: object
    properties:
      identifier:
        type: string
        format: uuid
      name:
        type: string
      mimeType:
        type: string
      size:
        type: integer
        format: int64
      license:
        $ref: '#/components/schemas/License'
      administrativeAgreement:
        type: boolean
      publisherAuthority:
        type: boolean
      embargoDate:
        type: string
        format: date-time
      type:
        type: string
    discriminator:
      propertyName: type
  FileSet:
    required:
    - type
    type: object
    properties:
      files:
        type: array
        items:
          $ref: '#/components/schemas/File'
      type:
        type: string
    discriminator:
      propertyName: type
  Grant:
    required:
    - type
    type: object
    properties:
      source:
        type: string
      id:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Identity:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
      name:
        type: string
      nameType:
        type: string
        enum:
        - Organizational
        - Personal
      orcId:
        type: string
      arpId:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Journal:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  JournalArticle:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        contentType:
          type: string
          enum:
          - Research article
          - Review article
          - Case report
          - Study protocol
          - Professional article
          - Popular science article
        originalResearch:
          type: boolean
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalCorrigendum:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        corrigendumFor:
          type: string
          format: uri
        type:
          type: string
  JournalInterview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalLeader:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalLetter:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalReview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  JournalShortCommunication:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        volume:
          type: string
        issue:
          type: string
        articleNumber:
          type: string
        pages:
          $ref: '#/components/schemas/Range'
        type:
          type: string
  Lecture:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  License:
    required:
    - type
    type: object
    properties:
      identifier:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      link:
        type: string
        format: uri
      type:
        type: string
    discriminator:
      propertyName: type
  Media:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        place:
          type: string
        programme:
          type: string
        type:
          type: string
  MediaDocumentary:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contributionType:
          type: string
          enum:
          - INTERNET
          - JOURNAL
          - NEWSPAPER
          - OTHER
          - RADIO
          - TELEVISION
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaInterview:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contributionType:
          type: string
          enum:
          - INTERNET
          - JOURNAL
          - NEWSPAPER
          - OTHER
          - RADIO
          - TELEVISION
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaProgrammeManagement:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contributionType:
          type: string
          enum:
          - INTERNET
          - JOURNAL
          - NEWSPAPER
          - OTHER
          - RADIO
          - TELEVISION
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MediaProgrammeParticipation:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        contributionType:
          type: string
          enum:
          - INTERNET
          - JOURNAL
          - NEWSPAPER
          - OTHER
          - RADIO
          - TELEVISION
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  MonographPages:
    required:
    - type
    type: object
    properties:
      introduction:
        $ref: '#/components/schemas/Range'
      pages:
        type: string
      illustrated:
        type: boolean
      type:
        type: string
    discriminator:
      propertyName: type
  NullPages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Organization:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Agent'
    - type: object
      properties:
        id:
          type: string
          format: uri
        labels:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
  OtherPresentation:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/NullPages'
        type:
          type: string
  OtherStudentWork:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        submittedDate:
          $ref: '#/components/schemas/PublicationDate'
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  Pages:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Place:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Publication:
    required:
    - type
    type: object
    properties:
      identifier:
        $ref: '#/components/schemas/SortableIdentifier'
      status:
        type: string
        enum:
        - NEW
        - DRAFT
        - PUBLISHED
        - DRAFT_FOR_DELETION
      owner:
        type: string
      publisher:
        $ref: '#/components/schemas/Organization'
      createdDate:
        type: string
        format: date-time
      modifiedDate:
        type: string
        format: date-time
      publishedDate:
        type: string
        format: date-time
      indexedDate:
        type: string
        format: date-time
      handle:
        type: string
        format: uri
      doi:
        type: string
        format: uri
      doiRequest:
        $ref: '#/components/schemas/DoiRequest'
      link:
        type: string
        format: uri
      entityDescription:
        $ref: '#/components/schemas/EntityDescription'
      fileSet:
        $ref: '#/components/schemas/FileSet'
      projects:
        type: array
        items:
          $ref: '#/components/schemas/ResearchProject'
      additionalIdentifiers:
        uniqueItems: true
        type: array
        items:
          $ref: '#/components/schemas/AdditionalIdentifier'
      subjects:
        type: array
        items:
          type: string
          format: uri
      modelVersion:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationContext:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationDate:
    required:
    - type
    type: object
    properties:
      year:
        type: string
      month:
        type: string
      day:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  PublicationInstancePages:
    required:
    - type
    type: object
    properties:
      pages:
        $ref: '#/components/schemas/Pages'
      peerReviewed:
        type: boolean
      type:
        type: string
    discriminator:
      propertyName: type
  Publisher:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  PublishingHouse:
    required:
    - type
    type: object
    properties:
      type:
        type: string
    discriminator:
      propertyName: type
  Range:
    required:
    - type
    type: object
    properties:
      begin:
        type: string
      end:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Reference:
    required:
    - type
    type: object
    properties:
      publicationContext:
        $ref: '#/components/schemas/PublicationContext'
      doi:
        type: string
        format: uri
      publicationInstance:
        $ref: '#/components/schemas/PublicationInstancePages'
      type:
        type: string
    discriminator:
      propertyName: type
  ReifiedExtent:
    required:
    - type
    type: object
    properties:
      value:
        type: string
      datatype:
        type: string
      type:
        type: string
    discriminator:
      propertyName: type
  Report:
    type: object
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        series:
          $ref: '#/components/schemas/BookSeries'
        seriesTitle:
          type: string
          writeOnly: true
        seriesNumber:
          type: string
        publisher:
          $ref: '#/components/schemas/PublishingHouse'
        isbnList:
          type: array
          items:
            type: string
  ReportBasic:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportPolicy:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportResearch:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ReportWorkingPaper:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationInstancePages'
    - type: object
      properties:
        pages:
          $ref: '#/components/schemas/MonographPages'
        type:
          type: string
  ResearchProject:
    required:
    - type
    type: object
    properties:
      id:
        type: string
        format: uri
      name:
        type: string
      grants:
        type: array
        items:
          $ref: '#/components/schemas/Grant'
      approvals:
        type: array
        items:
          $ref: '#/components/schemas/Approval'
      type:
        type: string
    discriminator:
      propertyName: type
  Series:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        id:
          type: string
          format: uri
        type:
          type: string
  SortableIdentifier:
    type: object
  TemporalExtent:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Pages'
    - type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        extent:
          $ref: '#/components/schemas/ReifiedExtent'
        type:
          type: string
  UnconfirmedJournal:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublicationContext'
    - type: object
      properties:
        title:
          type: string
        printIssn:
          type: string
        onlineIssn:
          type: string
        type:
          type: string
  UnconfirmedPlace:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/Place'
    - type: object
      properties:
        label:
          type: string
        country:
          type: string
        type:
          type: string
  UnconfirmedPublisher:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/PublishingHouse'
    - type: object
      properties:
        name:
          type: string
        type:
          type: string
  UnconfirmedSeries:
    required:
    - type
    type: object
    discriminator:
      propertyName: type
    allOf:
    - $ref: '#/components/schemas/BookSeries'
    - type: object
      properties:
        title:
          type: string
        issn:
          type: string
        onlineIssn:
          type: string
        type:
          type: string
  Venue:
    required:
    - type
    type: object
    properties:
      place:
        $ref: '#/components/schemas/Place'
      sequence:
        type: integer
        format: int32
      type:
        type: string
    discriminator:
      propertyName: type
